// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tps.proto

#ifdef _MSC_VER
#pragma warning(disable: 4125)
#pragma warning(disable: 4647)
#pragma warning(disable: 4668)
#pragma warning(disable: 4800)
#pragma warning(disable: 4946)
#endif //_MSC_VER

#include "tps.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tpspb {
PROTOBUF_CONSTEXPR TestRepChannelData_SceneComponentStatesEntry_DoNotUse::TestRepChannelData_SceneComponentStatesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct TestRepChannelData_SceneComponentStatesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRepChannelData_SceneComponentStatesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRepChannelData_SceneComponentStatesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestRepChannelData_SceneComponentStatesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRepChannelData_SceneComponentStatesEntry_DoNotUseDefaultTypeInternal _TestRepChannelData_SceneComponentStatesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TestRepChannelData::TestRepChannelData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scenecomponentstates_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TestRepChannelDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRepChannelDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRepChannelDataDefaultTypeInternal() {}
  union {
    TestRepChannelData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRepChannelDataDefaultTypeInternal _TestRepChannelData_default_instance_;
}  // namespace tpspb
static ::_pb::Metadata file_level_metadata_tps_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tps_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tps_2eproto = nullptr;

const uint32_t TableStruct_tps_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tpspb::TestRepChannelData, _impl_.scenecomponentstates_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::tpspb::TestRepChannelData)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tpspb::_TestRepChannelData_SceneComponentStatesEntry_DoNotUse_default_instance_._instance,
  &::tpspb::_TestRepChannelData_default_instance_._instance,
};

const char descriptor_table_protodef_tps_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ttps.proto\022\005tpspb\032\023unreal_common.proto\""
  "\305\001\n\022TestRepChannelData\022Q\n\024sceneComponent"
  "States\030\001 \003(\01323.tpspb.TestRepChannelData."
  "SceneComponentStatesEntry\032\\\n\031SceneCompon"
  "entStatesEntry\022\013\n\003key\030\001 \001(\r\022.\n\005value\030\002 \001"
  "(\0132\037.channeldpb.SceneComponentState:\0028\001B"
  "5Z3channeld.clewcat.com/examples/channel"
  "d-ue-tps/tpspbb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tps_2eproto_deps[1] = {
  &::descriptor_table_unreal_5fcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_tps_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tps_2eproto = {
    false, false, 302, descriptor_table_protodef_tps_2eproto,
    "tps.proto",
    &descriptor_table_tps_2eproto_once, descriptor_table_tps_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_tps_2eproto::offsets,
    file_level_metadata_tps_2eproto, file_level_enum_descriptors_tps_2eproto,
    file_level_service_descriptors_tps_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tps_2eproto_getter() {
  return &descriptor_table_tps_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tps_2eproto(&descriptor_table_tps_2eproto);
namespace tpspb {

// ===================================================================

TestRepChannelData_SceneComponentStatesEntry_DoNotUse::TestRepChannelData_SceneComponentStatesEntry_DoNotUse() {}
TestRepChannelData_SceneComponentStatesEntry_DoNotUse::TestRepChannelData_SceneComponentStatesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TestRepChannelData_SceneComponentStatesEntry_DoNotUse::MergeFrom(const TestRepChannelData_SceneComponentStatesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TestRepChannelData_SceneComponentStatesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tps_2eproto_getter, &descriptor_table_tps_2eproto_once,
      file_level_metadata_tps_2eproto[0]);
}

// ===================================================================

class TestRepChannelData::_Internal {
 public:
};

void TestRepChannelData::clear_scenecomponentstates() {
  _impl_.scenecomponentstates_.Clear();
}
TestRepChannelData::TestRepChannelData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TestRepChannelData::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tpspb.TestRepChannelData)
}
TestRepChannelData::TestRepChannelData(const TestRepChannelData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TestRepChannelData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.scenecomponentstates_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.scenecomponentstates_.MergeFrom(from._impl_.scenecomponentstates_);
  // @@protoc_insertion_point(copy_constructor:tpspb.TestRepChannelData)
}

inline void TestRepChannelData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.scenecomponentstates_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TestRepChannelData::~TestRepChannelData() {
  // @@protoc_insertion_point(destructor:tpspb.TestRepChannelData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TestRepChannelData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.scenecomponentstates_.Destruct();
  _impl_.scenecomponentstates_.~MapField();
}

void TestRepChannelData::ArenaDtor(void* object) {
  TestRepChannelData* _this = reinterpret_cast< TestRepChannelData* >(object);
  _this->_impl_.scenecomponentstates_.Destruct();
}
void TestRepChannelData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestRepChannelData::Clear() {
// @@protoc_insertion_point(message_clear_start:tpspb.TestRepChannelData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scenecomponentstates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestRepChannelData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<uint32, .channeldpb.SceneComponentState> sceneComponentStates = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.scenecomponentstates_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestRepChannelData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tpspb.TestRepChannelData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .channeldpb.SceneComponentState> sceneComponentStates = 1;
  if (!this->_internal_scenecomponentstates().empty()) {
    using MapType = ::_pb::Map<uint32_t, ::channeldpb::SceneComponentState>;
    using WireHelper = TestRepChannelData_SceneComponentStatesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_scenecomponentstates();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tpspb.TestRepChannelData)
  return target;
}

size_t TestRepChannelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tpspb.TestRepChannelData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .channeldpb.SceneComponentState> sceneComponentStates = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_scenecomponentstates_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::channeldpb::SceneComponentState >::const_iterator
      it = this->_internal_scenecomponentstates().begin();
      it != this->_internal_scenecomponentstates().end(); ++it) {
    total_size += TestRepChannelData_SceneComponentStatesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestRepChannelData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TestRepChannelData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestRepChannelData::GetClassData() const { return &_class_data_; }


void TestRepChannelData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TestRepChannelData*>(&to_msg);
  auto& from = static_cast<const TestRepChannelData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tpspb.TestRepChannelData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.scenecomponentstates_.MergeFrom(from._impl_.scenecomponentstates_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestRepChannelData::CopyFrom(const TestRepChannelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tpspb.TestRepChannelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRepChannelData::IsInitialized() const {
  return true;
}

void TestRepChannelData::InternalSwap(TestRepChannelData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scenecomponentstates_.InternalSwap(&other->_impl_.scenecomponentstates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestRepChannelData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tps_2eproto_getter, &descriptor_table_tps_2eproto_once,
      file_level_metadata_tps_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tpspb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tpspb::TestRepChannelData_SceneComponentStatesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tpspb::TestRepChannelData*
Arena::CreateMaybeMessage< ::tpspb::TestRepChannelData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tpspb::TestRepChannelData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
